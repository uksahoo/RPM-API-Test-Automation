{
	"info": {
		"_postman_id": "46cd45bd-dc2f-4452-b195-4125ba81a67e",
		"name": "Perl New/Modernized/RPM APIs_12052020",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Session End Point",
			"item": [
				{
					"name": "Auth Command",
					"item": [
						{
							"name": "get_session/mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"authentication_token\", jsonData.authentication_token);",
											"//postman.setEnvironmentVariable(\"user_id\", jsonData.id);",
											"//postman.setEnvironmentVariable(\"email\", jsonData.email);",
											"postman.setEnvironmentVariable(\"sessionID\", jsonData.session[0].sessionID);",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"sessionID\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								},
								"description": "Send the get_session command to create a new server side session for your application. The\nresponse to this command is a sessionID that your application will use for subsequent requests.\nThis command also returns the Users first name and a list of devices that the user owns."
							},
							"response": []
						},
						{
							"name": "get_session/mobile/",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Bad request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /mobile123",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Missing Authentication Token\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile123/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile123",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /mobile123",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile123/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile123",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /mobile/oranges",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Missing Authentication Token\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/oranges/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"oranges",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /mobile/oranges",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/oranges/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"oranges",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /apples/session",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Missing Authentication Token\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/apples/session/oranges/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"apples",
										"session",
										"oranges",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_session /apples/session",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b0e1910-0620-44c9-b208-75d71272d2d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_session",
											"type": "text"
										},
										{
											"key": "key",
											"value": "{{key}}",
											"type": "text"
										},
										{
											"key": "un",
											"value": "{{un}}",
											"type": "text"
										},
										{
											"key": "pw",
											"value": "{{pw}}",
											"type": "text"
										},
										{
											"key": "requestID",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/apples/session/oranges/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"apples",
										"session",
										"oranges",
										"session.json"
									]
								}
							},
							"response": []
						}
					],
					"description": "auth\n\nget_session\nThis is effectively a login call. The user provides a username, password and api key and they receive a sessionID that can be used in all subsequent API calls. \n\n\nkill_session\nThis is effectively a logout call. Sessions never really expire in the legacy API so there isnt really any incentive for an API user to call this function.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "43b3f46b-aed0-49c7-ac32-6de7c23007d7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "72b7207d-69ba-4085-88fe-1f867eab034b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Command",
					"item": [
						{
							"name": "get_home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c8e9d2f-87f2-4262-a40e-31158f5f118e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_home",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_home",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c8e9d2f-87f2-4262-a40e-31158f5f118e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_home",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_onetouch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fd7d078-0284-490d-861d-0c2144a89de4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_onetouch",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_onetouch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fd7d078-0284-490d-861d-0c2144a89de4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_onetouch",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3784b79-32a1-4cf3-9be8-838a5801ca7f",
										"exec": [
											"/*",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});{",
											"    \"message\": \"\",",
											"    \"devices_screen\": [",
											"        {",
											"            \"status\": \"Online\"",
											"        },",
											"        {",
											"            \"response\": \"AQU='72','8|1|2|3|4|5|6|7|32|0|7|2|6|Aux1|0|1|0|0|Aux2|0|1|0|0|Aux3|0|1|0|0|Aux4|0|1|0|0|Aux5|0|1|0|0|Aux6|0|1|0|0|Aux7|0|1|0|0|Extra Aux'\"",
											"        },",
											"        {",
											"            \"group\": \"1\"",
											"        },",
											"        {",
											"            \"aux_1\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux1\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_7_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"2\"",
											"                },",
											"                {",
											"                    \"subtype\": \"6\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_2\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux2\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_3\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux3\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_4\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux4\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_5\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux5\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_6\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux6\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_7\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux7\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_EA\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Extra Aux\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        }",
											"    ]",
											"}",
											"*/",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_devices",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3784b79-32a1-4cf3-9be8-838a5801ca7f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});",
											"",
											"/*",
											"});{",
											"    \"message\": \"\",",
											"    \"devices_screen\": [",
											"        {",
											"            \"status\": \"Online\"",
											"        },",
											"        {",
											"            \"response\": \"AQU='72','8|1|2|3|4|5|6|7|32|0|7|2|6|Aux1|0|1|0|0|Aux2|0|1|0|0|Aux3|0|1|0|0|Aux4|0|1|0|0|Aux5|0|1|0|0|Aux6|0|1|0|0|Aux7|0|1|0|0|Extra Aux'\"",
											"        },",
											"        {",
											"            \"group\": \"1\"",
											"        },",
											"        {",
											"            \"aux_1\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux1\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_7_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"2\"",
											"                },",
											"                {",
											"                    \"subtype\": \"6\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_2\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux2\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_3\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux3\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_4\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux4\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_5\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux5\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_6\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux6\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_7\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Aux7\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        },",
											"        {",
											"            \"aux_EA\": [",
											"                {",
											"                    \"state\": \"0\"",
											"                },",
											"                {",
											"                    \"label\": \"Extra Aux\"",
											"                },",
											"                {",
											"                    \"icon\": \"aux_1_0.png\"",
											"                },",
											"                {",
											"                    \"type\": \"0\"",
											"                },",
											"                {",
											"                    \"subtype\": \"0\"",
											"                }",
											"            ]",
											"        }",
											"    ]",
											"}",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_devices",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_web",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dc74e41-74d2-4b22-a3d6-3a22ea2c8a04",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"http://www.w3.org/1999/xhtml\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_web",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								},
								"description": "This is a somewhat undocumented command. Calling this command will provide a redirect to the WebTouch GUI. It leverages the input sessionID and actionID to identify the user and the device. This call is known to be  used by the Android mobile client, it is not know where else this call is used. "
							},
							"response": []
						},
						{
							"name": "get_web",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a16bff53-8795-48f0-90d7-4ddd6c0162af",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "get_web",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								},
								"description": "This is a somewhat undocumented command. Calling this command will provide a redirect to the WebTouch GUI. It leverages the input sessionID and actionID to identify the user and the device. This call is known to be  used by the Android mobile client, it is not know where else this call is used. "
							},
							"response": []
						}
					],
					"description": "get\nThe get_home, get_onetouch and get_devices calls all work similarly. They issue a command to a device server and then parse the response and present it back in the API. The parsing is specific to each call. A sample of what the response looks like is commented out in each command in the code. These calls are used by the various clients to determine what data to show on-screen.\n\n\nget_home\n\nget_onetouch\n\nget_devices\n\nget_web\nThis is a somewhat undocumented command. Calling this command will provide a redirect to the WebTouch GUI. It leverages the input sessionID and actionID to identify the user and the device. This call is known to be  used by the Android mobile client, it is not know where else this call is used. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37003ed5-ad20-4daa-b17f-ae68151df451",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d6ec2749-d118-43c8-917d-d0fe879236f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Set Command",
					"item": [
						{
							"name": "set_pool_pump",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "083eb4b5-85b5-4f4d-8e1b-1ad6d74bf65f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_pool_pump",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_pool_pump",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "083eb4b5-85b5-4f4d-8e1b-1ad6d74bf65f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_pool_pump",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_pool_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "805e7f93-bfbf-4ae2-a17f-dc76a917ba14",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_pool_heater&serial={{serial}}&actionID=command&sessionID={{sessionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_pool_heater"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "command"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_pool_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "805e7f93-bfbf-4ae2-a17f-dc76a917ba14",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "command",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_spa_pump",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43782e2c-29da-475b-b321-b35e57e13c68",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_spa_pump&serial={{serial}}&actionID=command&sessionID={{sessionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_spa_pump"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "command"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_spa_pump",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43782e2c-29da-475b-b321-b35e57e13c68",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "command",
											"value": "set_spa_pump",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_spa_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f13a82b7-0d65-4666-8c87-593dd154290a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_spa_heater&serial={{serial}}&actionID=command&sessionID={{sessionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_spa_heater"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "command"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_spa_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f13a82b7-0d65-4666-8c87-593dd154290a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_spa_heater",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_solar_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "273f8104-06d7-4432-95b6-58fb3e3fa954",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_solar_heater&serial={{serial}}&actionID=command&sessionID={{sessionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_solar_heater"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "command"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"description": "}\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_solar_heater",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "273f8104-06d7-4432-95b6-58fb3e3fa954",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "ommand",
											"value": "set_solar_heater",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_temps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "520e56e9-55d3-4252-be71-0b37be26fe00",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_temps&serial={{serial}}&actionID=command&sessionID={{sessionID}}&temp1=100&temp2=80",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_temps"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "command"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										},
										{
											"key": "temp1",
											"value": "100"
										},
										{
											"key": "temp2",
											"value": "80"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_temps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "520e56e9-55d3-4252-be71-0b37be26fe00",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_temps",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "temp1",
											"value": "100",
											"type": "text"
										},
										{
											"key": "temp2",
											"value": "80",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_swc_boost",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d41df5b-2018-46a7-94d3-4c4e54017fb0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_swc_boost",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_swc_boost",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d41df5b-2018-46a7-94d3-4c4e54017fb0",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_swc_boost",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "command",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_swc_low",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3771fb62-f817-44d7-b1e9-bedeaee5ffe3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"home_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_swc_low&serial={{serial}}&actionID={{actionID}}&sessionID={{sessionID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_swc_low"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_swc_low",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3771fb62-f817-44d7-b1e9-bedeaee5ffe3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_swc_low",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99c99b3a-890c-41d5-b6f6-527197690f03",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99c99b3a-890c-41d5-b6f6-527197690f03",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9eb21ef-76a9-4310-82f1-4ac4d4f38c3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9eb21ef-76a9-4310-82f1-4ac4d4f38c3a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"onetouch_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_onetouch_6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f3b03e0-b210-4224-988e-a8681945b040",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_onetouch_6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbbcb800-b416-4780-9896-acb2bb9f4b8c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbbcb800-b416-4780-9896-acb2bb9f4b8c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1803565-70e4-4ed3-8245-12627f41c675",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1803565-70e4-4ed3-8245-12627f41c675",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d950c4af-e1f7-480b-bc5a-fe36ae80f123",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d950c4af-e1f7-480b-bc5a-fe36ae80f123",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "820e4c62-1de1-45c0-b364-0f9bfcc126f9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "820e4c62-1de1-45c0-b364-0f9bfcc126f9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbcf6854-56a7-40fe-863d-3ec9d319d960",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"{}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B8",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_B8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_B8",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"{}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C8",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_C8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_C8",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D2",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D3",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D4",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D5",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D6",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D6",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D7",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D7",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D1",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_D8",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_D8",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_EA - Extra Auxiliary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"{}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_EA - Extra Auxiliary",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_aux_EA - Extra Auxiliary Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7d5d238-6d0b-4e0b-95b6-9f22a5a5c5a4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_aux_EA - Extra Auxiliary",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_dimmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ac9afda-e0af-437f-b46d-ceef7e55d69f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_dimmer&serial={{serial}}&actionID={{actionID}}&sessionID={{sessionID}}&level=50&aux=B1",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_dimmer"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										},
										{
											"key": "level",
											"value": "50"
										},
										{
											"key": "aux",
											"value": "B1"
										}
									]
								},
								"description": "This API command sets a Dimmer Auxiliary to a specified light level and returns the Devices\nScreen info. The API will return up to 32 auxiliaries, their type, state, and labels."
							},
							"response": []
						},
						{
							"name": "set_dimmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ac9afda-e0af-437f-b46d-ceef7e55d69f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_dimmer",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "level",
											"value": "50",
											"type": "text"
										},
										{
											"key": "aux",
											"value": "B1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_light",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe9278fe-d6ae-4c5f-bba5-cd97bb24e858",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_light&serial={{serial}}&actionID={{actionID}}&sessionID={{sessionID}}&light=1&aux=1",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_light"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										},
										{
											"key": "light",
											"value": "1"
										},
										{
											"key": "aux",
											"value": "1"
										}
									]
								},
								"description": "This API command sets the specified Auxiliary Light to a color and returns the Devices Screen\ninfo. The API will return up to 32 auxiliaries, their type, state, and labels."
							},
							"response": []
						},
						{
							"name": "set_light",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe9278fe-d6ae-4c5f-bba5-cd97bb24e858",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_light",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "light",
											"value": "1",
											"type": "text"
										},
										{
											"key": "aux",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "set_sjva",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23971d80-e942-4c7e-ae80-b12e33176734",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"devices_screen\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json?command=set_sjva&serial={{serial}}&actionID={{actionID}}&sessionID={{sessionID}}&percentage=75&aux=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									],
									"query": [
										{
											"key": "command",
											"value": "set_sjva"
										},
										{
											"key": "serial",
											"value": "{{serial}}"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}"
										},
										{
											"key": "percentage",
											"value": "75"
										},
										{
											"key": "aux",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "set_sjva",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23971d80-e942-4c7e-ae80-b12e33176734",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "command",
											"value": "set_sjva",
											"type": "text"
										},
										{
											"key": "serial",
											"value": "{{serial}}",
											"type": "text"
										},
										{
											"key": "actionID",
											"value": "{{actionID}}",
											"type": "text"
										},
										{
											"key": "sessionID",
											"value": "{{sessionID}}",
											"type": "text"
										},
										{
											"key": "percentage",
											"value": "75",
											"type": "text"
										},
										{
											"key": "aux",
											"value": "5",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/v1/mobile/session.json",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"mobile",
										"session.json"
									]
								}
							},
							"response": []
						}
					],
					"description": "set\nEach of the set commands work similarly. They construct a specific call to a device server. Depending on the call additional data is collected in the call and becomes part of the request to the device server. The data returned by the device server is forwarded to one of the get calls (get_home, get_onetouch or get_devices) to produce an output that is returned by the API. \n\n\nset_pool_pump\n\nset_pool_heater\n\nset_spa_pump\n\nset_spa_heater\n\nset_solar_heater\n\nset_temps\n\nset_swc_boost\n\nset_swc_low\n\nset_onetouch_X\n\nset_aux_X\n\nset_light\n\nset_dimmer\n\nset_sjva\n\nZodiac API Control Commands\nControl commands send control requests to the target Zodiac devices uniquely identified by a\nserial number.\nCommand Responses\nThe response to a control command is the screen that the command is most closely related to.\nThe follow table indicates the response to each control command.\nControl Command Response Screen\nset_pool_pump Home\nset_pool_heater Home\nset_spa_pump Home\nset_spa_heater Home\nset_temps Home\nset_swc_boost Home\nset_swc_low Home\nset_onetouch_X OneTouch\nset_light Devices\nset_dimmer Devices\nset_sjva Devices\nset_aux_X Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "84437ab7-cc2f-4cb3-a5fe-ffbecd70169b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "73c1b455-5372-406f-86cd-ab18e111deb9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admin End Point",
			"item": [
				{
					"name": "check_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79699e0e-9000-476d-b061-42370f65a93c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"check_firmware\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "{{serial}}",
									"type": "text"
								},
								{
									"key": "command",
									"value": "check_firmware",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "check_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79699e0e-9000-476d-b061-42370f65a93c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "{{serial}}",
									"type": "text"
								},
								{
									"key": "command",
									"value": "check_firmware",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "latest_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c4ddff0-fb5b-4d41-9084-dfabd9efaec1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"latest_firmware\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "{{serial}}",
									"type": "text"
								},
								{
									"key": "command",
									"value": "latest_firmware",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "latest_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c4ddff0-fb5b-4d41-9084-dfabd9efaec1",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "{{serial}}",
									"type": "text"
								},
								{
									"key": "command",
									"value": "latest_firmware",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71c9666c-2a88-474c-8bd3-83de357bb86b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"update_firmware\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "QKF5Y5D9G2C5",
									"type": "text"
								},
								{
									"key": "command",
									"value": "update_firmware",
									"type": "text"
								},
								{
									"key": "version",
									"value": "latest",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update_firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71c9666c-2a88-474c-8bd3-83de357bb86b",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The request could not be satisfied\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "key",
									"value": "JAPI5Y8T9AN790BHKZAZ",
									"type": "text"
								},
								{
									"key": "serial_number",
									"value": "QKF5Y5D9G2C5",
									"type": "text"
								},
								{
									"key": "command",
									"value": "update_firmware",
									"type": "text"
								},
								{
									"key": "version",
									"value": "latest",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/devices/admin",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"devices",
								"admin"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kill_Session",
			"item": [
				{
					"name": "kill_session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81012271-aca2-4d05-bd12-f13996107c56",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"authentication_token\", jsonData.authentication_token);",
									"//postman.setEnvironmentVariable(\"user_id\", jsonData.id);",
									"//postman.setEnvironmentVariable(\"email\", jsonData.email);",
									"postman.setEnvironmentVariable(\"sessionID\", jsonData.session[0].sessionID);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "command",
									"value": "kill_session",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "serial",
									"value": "123",
									"type": "text",
									"disabled": true
								},
								{
									"key": "apiFormat",
									"value": "html",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/mobile/session.json?command=kill_session&sessionID={{sessionID}}&actionID={{actionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"mobile",
								"session.json"
							],
							"query": [
								{
									"key": "command",
									"value": "kill_session"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "kill_session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81012271-aca2-4d05-bd12-f13996107c56",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"authentication_token\", jsonData.authentication_token);",
									"//postman.setEnvironmentVariable(\"user_id\", jsonData.id);",
									"//postman.setEnvironmentVariable(\"email\", jsonData.email);",
									"postman.setEnvironmentVariable(\"sessionID\", jsonData.session[0].sessionID);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "command",
									"value": "kill_session",
									"type": "text"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}",
									"type": "text"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}",
									"type": "text"
								},
								{
									"key": "serial",
									"value": "123",
									"type": "text",
									"disabled": true
								},
								{
									"key": "apiFormat",
									"value": "html",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL}}/v1/mobile/session.json?command=kill_session&sessionID={{sessionID}}&actionID={{actionID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"v1",
								"mobile",
								"session.json"
							],
							"query": [
								{
									"key": "command",
									"value": "kill_session"
								},
								{
									"key": "sessionID",
									"value": "{{sessionID}}"
								},
								{
									"key": "actionID",
									"value": "{{actionID}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "After a session is no longer needed, your application should delete the session. This is done for\nmany reasons such as a user logging off, idle web pages, or stopping a users current session\nfrom continuing.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "71fa7868-c5e6-4c52-a2ed-c9fa78a47c70",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c818a65b-d3dc-49b4-a5dd-54d1e3ead9da",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}